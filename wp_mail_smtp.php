<?php
/*
Plugin Name: WP-Mail-SMTP
Version: 0.7
Plugin URI: http://www.callum-macdonald.com/code/wp-mail-smtp/
Description: Reconfigures the wp_mail() function to use SMTP instead of mail() and creates an options page to manage host, username, password, etc.
Author: Callum Macdonald
Author URI: http://www.callum-macdonald.com/
*/

/**
 * @author Callum Macdonald
 * @copyright Callum Macdonald, 2007-8, All Rights Reserved
 * This code is released under the GPL licence version 3 or later, available here
 * http://www.gnu.org/licenses/gpl.txt
 */

/**
 * TODO
 * 
 * + Improve email checks for mail_from
 * 
 * CHANGELOG
 * 
 * 0.7 - Added checks to only override the default from name / email
 * 0.6 - Added additional SMTP debugging output
 * 0.5.2 - Fixed a pre 2.3 bug to do with mail from
 * 0.5.1 - Added a check to display a warning on versions prior to 2.3
 * 0.5.0 - Upgraded to match 2.3 filters which add a second filter for from name
 * 0.4.2 - Fixed a bug in 0.4.1 and added more debugging output
 * 0.4.1 - Added $phpmailer->ErroInfo to the test mail output
 * 0.4 - Added the test email feature and cleaned up some other bits and pieces
 * 0.3.2 - Changed to use register_activation_hook for greater compatability
 * 0.3.1 - Added readme for WP-Plugins.org compatability
 * 0.3 - Various bugfixes and added From options
 * 0.2 - Reworked approach as suggested by westi, added options page
 * 0.1 - Initial approach, copying the wp_mail function and replacing it
 */

// Array of options and their default values
$wpms_options = array (
	'mail_from' => '',
	'mail_from_name' => '',
	'mailer' => 'smtp',
	'smtp_host' => 'localhost',
	'smtp_auth' => false,
	'smtp_user' => '',
	'smtp_pass' => ''
);

/**
 * Activation function. This function creates the required options and defaults.
 */
if (!function_exists('wp_mail_smtp_activate')) {
	
	function wp_mail_smtp_activate() {
		
		global $wpms_options;
		
		// Create the required options...
		foreach ($wpms_options as $name => $val) {
			add_option($name,$val);
		}
		
	}
	
}

// To avoid any (very unlikely) clashes, check if the function alredy exists
if (!function_exists('phpmailer_init_smtp')) {
	
	// This code is copied, from wp-includes/pluggable.php as at version 2.2.2
	function phpmailer_init_smtp($phpmailer) {
		
		// Are at least the mailer and host set and non-blank?
		if (!is_string(get_option('mailer')) || get_option('mailer') == '' || !is_string(get_option('smtp_host')) || get_option('smtp_host') == "" ) {
			return;
		}
		
		// Set the mailer type as per config above, this overrides the already called isMail method
		$phpmailer->Mailer = get_option('mailer');
		
		// If we're sending via SMTP, set the host
		if (get_option('mailer') == "smtp") {
			$phpmailer->Host = get_option('smtp_host');
			// If we're using smtp auth, set the username & password
			if (get_option('smtp_auth') == "true") {
				$phpmailer->SMTPAuth = TRUE;
				$phpmailer->Username = get_option('smtp_user');
				$phpmailer->Password = get_option('smtp_pass');
			}
		}
		
		// You can add your own options here, see the phpmailer documentation for more info:
		// http://phpmailer.sourceforge.net/docs/
		
		// Stop adding options here.
		
	} // End of phpmailer_init_smtp() function definition
	
}


/**
 * This function outputs the plugin options page.
 */
if (!function_exists('wp_mail_smtp_options_page')) {
	
	// Define the function
	function wp_mail_smtp_options_page() {
		
		// Load the options
		global $wpms_options, $phpmailer;
		
		// Make sure the PHPMailer class has been instantiated 
		// (copied verbatim from wp-includes/pluggable.php)
		// (Re)create it, if it's gone missing
		if ( !is_object( $phpmailer ) || !is_a( $phpmailer, 'PHPMailer' ) ) {
			require_once ABSPATH . WPINC . '/class-phpmailer.php';
			require_once ABSPATH . WPINC . '/class-smtp.php';
			$phpmailer = new PHPMailer();
		}

		// Send a test mail if necessary
		if (isset($_POST['wpms_action']) && $_POST['wpms_action'] == __('Send Test') && isset($_POST['to'])) {
			
			// Set up the mail variables
			$to = $_POST['to'];
			$subject = "WP Mail SMTP: Test mail to " . $to;
			$message = "This is a test email generated by the WP Mail SMTP WordPress plugin.";
			
			// Set SMTPDebug to level 2
			$phpmailer->SMTPDebug = 2;
			
			// Start output buffering to grab smtp debugging output
			ob_start();
			
			// Send the test mail
			$result = wp_mail($to,$subject,$message);
			
			// Grab the smtp debugging output
			$smtp_debug = ob_get_clean();
			
			// Output the response
			?>
<div id="message" class="updated fade"><p><strong><?php _e('Test Message Sent'); ?></strong></p>
<p><?php _e('The result was:'); ?></p>
<pre><?php var_dump($result); ?></pre>
<?php if ($result != true) { ?>
<p><?php _e('The full debugging output is shown below:'); ?></p>
<pre><?php var_dump($phpmailer); ?></pre>
<?php } ?>
<p><?php _e('The SMTP debugging output is shown below:'); ?></p>
<pre><?php echo $smtp_debug ?></pre>
</div>
			<?php
			
		}
		
		?>
<div class="wrap">
<h2><?php _e('Advanced Email Options'); ?></h2>
<form method="post" action="options.php">
<?php wp_nonce_field('update-options'); ?>
<p class="submit"><input type="submit" name="Submit" value="<?php _e('Update Options &raquo;'); ?>" />
<fieldset class="options">
<legend><?php _e('From'); ?></legend>
<table class="optiontable">
<tr valign="top">
<th scope="row"><?php _e('From Email:'); ?> </th>
<td><p><input name="mail_from" type="text" id="mail_from" value="<?php print(get_option('mail_from')); ?>" size="40" class="code" /><br />
<?php _e('You can specify the email address that emails should be sent from. If you leave this blank, the admin email will be used.'); if(get_option('db_version') < 6124) { print('<br /><span style="color: red;">'); _e('<strong>Please Note:</strong> You appear to be using a version of WordPress prior to 2.3. Please ignore the From Name field and instead enter Name&lt;email@domain.com&gt; in this field.'); print('</span>'); } ?></p></td>
</tr>
<tr valign="top">
<th scope="row"><?php _e('From Name:'); ?> </th>
<td><p><input name="mail_from_name" type="text" id="mail_from_name" value="<?php print(get_option('mail_from_name')); ?>" size="40" class="code" /><br />
<?php _e('You can specify the name that emails should be sent from. If you leave this blank, the emails will be sent from WordPress.'); ?></p></td>
</tr>
</table>

<legend><?php _e('Mailer'); ?></legend>
<table class="optiontable">
<tr valign="top">
<th scope="row"><?php _e('Mailer:'); ?> </th>
<td>
<p><input id="mailer_smtp" type="radio" name="mailer" value="smtp" <?php checked('smtp', get_option('mailer')); ?> />
<label for="mailer_smtp"><?php _e('Send all WordPress emails via SMTP.'); ?></label></p>
<p><input id="mailer_mail" type="radio" name="mailer" value="mail" <?php checked('mail', get_option('mailer')); ?> />
<label for="mailer_mail"><?php _e('Use the PHP mail() function to send emails.'); ?></label></p>
</td>
</tr>
</table>

<legend><?php _e('SMTP Options'); ?></legend>
<p><?php _e('These options only apply if you have chosen to send mail by SMTP above.'); ?></p>
<table class="optiontable">
<tr valign="top">
<th scope="row"><?php _e('SMTP Host:'); ?> </th>
<td><input name="smtp_host" type="text" id="smtp_host" value="<?php print(get_option('smtp_host')); ?>" size="40" class="code" /></td>
</tr>
<tr valign="top">
<th scope="row"><?php _e('Authentication:'); ?> </th>
<td>
<p><input id="smtp_auth_false" type="radio" name="smtp_auth" value="false" <?php checked('false', get_option('smtp_auth')); ?> />
<label for="smtp_auth_false"><?php _e('No: Do not use SMTP authentication.'); ?></label></p>
<p><input id="smtp_auth_true" type="radio" name="smtp_auth" value="true" <?php checked('true', get_option('smtp_auth')); ?> />
<label for="smtp_auth_true"><?php _e('Yes: Use SMTP authentication.'); ?></label></p>
<p><?php _e('If this is set to no, the values below are ignored.'); ?></p>
</td>
</tr>
<tr valign="top">
<th scope="row"><?php _e('Username:'); ?> </th>
<td><input name="smtp_user" type="text" id="smtp_user" value="<?php print(get_option('smtp_user')); ?>" size="40" class="code" /></td>
</tr>
<tr valign="top">
<th scope="row"><?php _e('Password:'); ?> </th>
<td><input name="smtp_pass" type="text" id="smtp_pass" value="<?php print(get_option('smtp_pass')); ?>" size="40" class="code" /></td>
</tr>
</table>

<p class="submit"><input type="submit" name="Submit" value="<?php _e('Update Options &raquo;'); ?>" />
<input type="hidden" name="action" value="update" />
</p>
<input type="hidden" name="page_options" value="<?php print(implode(',',array_keys($wpms_options))); ?>">
</fieldset>
</form>

<form method="POST">
<fieldset class="options">
<legend><?php _e('Send a Test Email'); ?></legend>
<table class="optiontable">
<tr valign="top">
<th scope="row"><?php _e('To:'); ?> </th>
<td><p><input name="to" type="text" id="to" value="" size="40" class="code" /><br />
<?php _e('Type an email address here and then click Send Test to generate a test email.'); ?></p></td>
</tr>
</table>
<p class="submit"><input type="submit" name="wpms_action" value="<?php _e('Send Test'); ?>" /></p>
</fieldset>
</form>

</div>
		<?php
		
	} // End of wp_mail_smtp_options_page() function definition
	
}

/**
 * This function adds the required page (only 1 at the moment).
 */
if (!function_exists('wp_mail_smtp_menus')) {
	
	function wp_mail_smtp_menus() {
		
		if (function_exists('add_submenu_page')) {
			add_options_page(__('Advanced Email Options'),__('Email'),'manage_options',__FILE__,'wp_mail_smtp_options_page');
		}
		
	} // End of wp_mail_smtp_menus() function definition
	
}

/**
 * This function sets the from email value
 */
if (!function_exists('wp_mail_smtp_mail_from')) {
	
	function wp_mail_smtp_mail_from ($orig) {
		
		// If the from email is not the default, return it unchanged
		if ( $orig != 'wordpress@' . str_replace('www.','',strtolower($_SERVER['SERVER_NAME'])) ) {
			return $orig;
		}
		
		// If we can, use the is_email function to verify the email
		if ( function_exists('is_email') && get_option('db_version') >= 6124 ) {
			if ( is_email( get_option('mail_from') ) ) {
				return(get_option('mail_from'));
			}
			else {
				return ($orig);
			}
		}
		// If is_email is not available, check there's an @ symbol
		elseif (strpos(get_option('mail_from'),'@')) {
			return(get_option('mail_from'));
		}
		// If there's no is_email and no @, use the supplied variable
		else {
			return($orig);
		}
		
	} // End of wp_mail_smtp_mail_from() function definition
	
}

/**
 * This function sets the from name value
 */
if (!function_exists('wp_mail_smtp_mail_from_name')) {
	
	function wp_mail_smtp_mail_from_name ($orig) {
		
		if ($orig == 'WordPress' && get_option('mail_from_name') != "" && is_string(get_option('mail_from_name'))) {
			return get_option('mail_from_name');
		}
		else {
			return $orig;
		}
		
	} // End of wp_mail_smtp_mail_from_name() function definition
	
}

// Add an action on phpmailer_init
add_action('phpmailer_init','phpmailer_init_smtp');
// Add the create pages options
add_action('admin_menu','wp_mail_smtp_menus');
// Add an activation hook for this plugin
register_activation_hook(__FILE__,'wp_mail_smtp_activate');
// Add filters to replace the mail from name and emailaddress
add_filter('wp_mail_from','wp_mail_smtp_mail_from');
add_filter('wp_mail_from_name','wp_mail_smtp_mail_from_name');

?>